[tox]
envlist = py{{ ".".join(cookiecutter.python_version.split(".")[:2])|replace(".", "") }}, bandit, prospector, mypy
toxworkdir = {env:TOX_WORK_DIR:.tox}
isolated_build = True

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest -sv

[testenv:coverage]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest --cov={{ cookiecutter.project_name }} --cov-report term --cov-report html

[testenv:codecov]
passenv = CI TRAVIS TRAVIS_*
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest --cov={{ cookiecutter.project_name }}
    poetry run codecov

[testenv:bandit]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run bandit -r src/

[testenv:prospector]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run prospector

[testenv:mypy]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
whitelist_externals =
    /bin/sh
    poetry
commands =
    poetry install -v
    /bin/sh -c "poetry run mypy --ignore-missing-imports --follow-imports=skip --strict-optional {toxinidir}/src/{{ cookiecutter.project_name }}/*.py"

[testenv:formatting]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run black src/
    poetry run black tests/
    poetry run isort -rc src/
    poetry run isort -rc tests/

[testenv:black-only-check]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run black --check src/
    poetry run black --check tests/

[testenv:docs]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
whitelist_externals = make
deps =
    m2r
    sphinx
    sphinx-rtd-theme
commands =
    sphinx-apidoc -f -M -o {toxinidir}/docs/source/ {toxinidir}/src/
    make -C {toxinidir}/docs/ html

[testenv:shiv]
basepython = python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}
deps = shiv
whitelist_externals = sh
commands = sh -c "shiv $TOX_PACKAGE -o {toxinidir}/dist/{{ cookiecutter.project_name }}-py{{ ".".join(cookiecutter.python_version.split(".")[:2])|replace(".", "") }}.pyz -e {{ cookiecutter.project_name }}.cli:main -p '/usr/bin/env python{{ ".".join(cookiecutter.python_version.split(".")[:2]) }}'"
